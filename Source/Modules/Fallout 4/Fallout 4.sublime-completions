{
	"scope": "source.papyrus.fallout4",
	"completions":
	[
		{"trigger": "find\tint func.", "contents": "Find(${1:Type akElement}, ${2:Int aiStartIndex = 0})"},
		{"trigger": "rfind\tint func.", "contents": "RFind(${1:Type akElement}, ${2:Int aiStartIndex = -1})"},
		{"trigger": "getstate\tstring func.", "contents": "GetState()"},
		{"trigger": "gotostate\tfunc.", "contents": "GoToState(${1:String asState})"},
		{"trigger": "onbeginstate\tevent", "contents": "Event OnBeginState()\n\t${0}\nEndEvent"},
		{"trigger": "onendstate\tevent", "contents": "Event OnEndState()\n\t${0}\nEndEvent"},
		{"trigger": "oninit\tevent", "contents": "Event OnInit()\n\t${0}\nEndEvent"},
		{"trigger": "as\tcast", "contents": "As ${1:$SELECTION}"},
		{"trigger": "auto\tkeyword", "contents": "Auto"},
		{"trigger": "autoreadonly\tkeyword", "contents": "AutoReadOnly"},
		{"trigger": "bool\ttype", "contents": "Bool"},
		{"trigger": "else\telse", "contents": "Else\n\t${0}"},
		{"trigger": "elseif\telse-if", "contents": "ElseIf ${1:$SELECTION}\n\t${0}"},
		{"trigger": "event\tevent def.", "contents": "Event ${1:EventName}(${2:Parameters})\n\t${0}\nEndEvent"},
		{"trigger": "false\tkeyword", "contents": "False"},
		{"trigger": "float\ttype", "contents": "Float"},
		{"trigger": "function\tfunction def.", "contents": "${1:Type} Function ${2:FunctionName}(${3:Parameters})\n\t${0}\nEndFunction"},
		{"trigger": "global\tkeyword", "contents": "Global"},
		{"trigger": "group\tgroup def.", "contents": "Group ${1:GroupName}\n\t${0}\nEndGroup"},
		{"trigger": "if\tif", "contents": "If ${1:$SELECTION}\n\t${0}\nEndIf"},
		{"trigger": "import\timport script", "contents": "Import ${1:$SELECTION}"},
		{"trigger": "int\ttype", "contents": "Int"},
		{"trigger": "is\tkeyword", "contents": "Is"},
		{"trigger": "length\tkeyword", "contents": "Length"},
		{"trigger": "native\tkeyword", "contents": "Native"},
		{"trigger": "new\tarray creation", "contents": "New ${1:$SELECTION}[${2:}]"},
		{"trigger": "new\tstruct creation", "contents": "New ${1:$SELECTION}"},
		{"trigger": "none\tkeyword", "contents": "None"},
		{"trigger": "parent\tkeyword", "contents": "Parent"},
		{"trigger": "property\tproperty def.", "contents": "${1:Type} Property ${2:PropertyName} ${3:Auto}"},
		{"trigger": "fullproperty\tfull property def.", "contents": "${1:Type} Property ${2:PropertyName}\n\t${1:Type} Function Get()\n\t\t${3}\n\tEndFunction\n\n\tFunction Set(${1:Type} Variable)\n\t\t${4}\n\tEndFunction\nEndProperty"},
		{"trigger": "return\tstat.", "contents": "Return ${1:$SELECTION}"},
		{"trigger": "scriptname\tscript header def.", "contents": "ScriptName ${1:Name}"},
		{"trigger": "extends\tkeyword", "contents": "Extends ${1:Parent}"},
		{"trigger": "self\tkeyword", "contents": "Self"},
		{"trigger": "autostate\tauto state def.", "contents": "Auto State ${1:state}\n\t$0\nEndState"},
		{"trigger": "state\tstate def.", "contents": "State ${1:$SELECTION}\n\t${0}\nEndState"},
		{"trigger": "string\ttype", "contents": "String"},
		{"trigger": "struct\tstruct def.", "contents": "Struct ${1:StructName}\n\t${0}\nEndStruct"},
		{"trigger": "true\tkeyword", "contents": "True"},
		{"trigger": "var\ttype", "contents": "Var"},
		{"trigger": "while\twhile-loop", "contents": "While ${1:$SELECTION}\n\t${0}\nEndWhile"},
		{"trigger": "for\tpseudo for-loop", "contents": "Int ${1:iCount} = 0\nWhile ${1:iCount} < ${2:maxSize}\n\t${0}\n\t${1:iCount} += 1\nEndWhile"},
		{"trigger": "const\tkeyword", "contents": "Const"},
		{"trigger": "default\tkeyword", "contents": "Default"},
		{"trigger": "mandatory\tkeyword", "contents": "Mandatory"},
		{"trigger": "betaonly\tkeyword", "contents": "BetaOnly"},
		{"trigger": "debugonly\tkeyword", "contents": "DebugOnly"},
		{"trigger": "collapsedonref\tkeyword", "contents": "CollapsedOnRef"},
		{"trigger": "collapsedonbase\tkeyword", "contents": "CollapsedOnBase"},
		{"trigger": "collapsed\tkeyword", "contents": "Collapsed"},
		{"trigger": "customevent\tcustom event def.", "contents": "CustomEvent ${1:EventName}"}
	]
}