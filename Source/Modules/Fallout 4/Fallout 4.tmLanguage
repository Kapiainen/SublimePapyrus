<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>psc</string>
	</array>
	<key>name</key>
	<string>Papyrus - Fallout 4</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>comment</key>
			<string>Empty line</string>
			<key>match</key>
			<string>^\s*$</string>
			<key>name</key>
			<string>meta.emptyline.papyrus</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#commentDocumentation</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#commentBlock</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#commentLine</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#scriptHeader</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#import</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#group</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#endgroup</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#struct</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#endstruct</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#state</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#endState</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#event</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#endEvent</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#return</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#elseif</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#else</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#endIf</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#while</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#endWhile</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#property</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#endProperty</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#function</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#endFunction</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#variable</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#assign</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#expression</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#whitespace</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#unmatched</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>addExpression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Addition or subtraction</string>
					<key>match</key>
					<string>(\+|\-)</string>
					<key>name</key>
					<string>keyword.operator.papyrus</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#multExpression</string>
				</dict>
			</array>
		</dict>
		<key>andExpression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>AND</string>
					<key>match</key>
					<string>\&amp;\&amp;</string>
					<key>name</key>
					<string>keyword.operator.papyrus</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#boolExpression</string>
				</dict>
			</array>
		</dict>
		<key>arrayAtom</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>comment</key>
					<string>Array</string>
					<key>end</key>
					<string>\]</string>
					<key>name</key>
					<string>meta.array.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#atom</string>
				</dict>
			</array>
		</dict>
		<key>arrayFuncOrId</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#funcOrId</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>comment</key>
					<string>Array element access</string>
					<key>end</key>
					<string>\]</string>
					<key>name</key>
					<string>meta.arrayelement.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>assign</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^\s*</string>
					<key>comment</key>
					<string>Assign statement</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.assign.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#assignmentOperators</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>assignmentOperators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Assignment operators</string>
					<key>match</key>
					<string>(\=|\+\=|\-\=|\*\=|\/\=|\%\=)</string>
					<key>name</key>
					<string>keyword.operator.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>atom</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)\b(new)\s+([_a-z][0-9_a-z]*)\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.papyrus</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>New array</string>
					<key>end</key>
					<string>\]</string>
					<key>name</key>
					<string>meta.newarray.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#integer</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>comment</key>
					<string>Parenthesis</string>
					<key>end</key>
					<string>(\)|[\n\r])</string>
					<key>name</key>
					<string>meta.parenthesis.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#funcOrId</string>
				</dict>
			</array>
		</dict>
		<key>baseTypes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Type</string>
					<key>match</key>
					<string>(?i)\b(bool|float|int|string|var)\b</string>
					<key>name</key>
					<string>storage.type.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>bool</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Boolean literal</string>
					<key>match</key>
					<string>(?i)\b(true|false|none)\b</string>
					<key>name</key>
					<string>constant.language.boolean.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>boolExpression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Comparison operators</string>
					<key>match</key>
					<string>(\=\=|\!\=|\&lt;\=|\&gt;\=|\&lt;|\&gt;)</string>
					<key>name</key>
					<string>keyword.operator.papyrus</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#addExpression</string>
				</dict>
			</array>
		</dict>
		<key>castAtom</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.papyrus</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Cast</string>
					<key>match</key>
					<string>(?i)\b(as)\s+([_a-z][0-9_a-z]*)\b</string>
					<key>name</key>
					<string>meta.cast.papyrus</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#dotAtom</string>
				</dict>
			</array>
		</dict>
		<key>comma</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Comma</string>
					<key>match</key>
					<string>\,</string>
					<key>name</key>
					<string>meta.comma.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>commentBlock</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>;/</string>
					<key>comment</key>
					<string>Comment block</string>
					<key>end</key>
					<string>/;</string>
					<key>name</key>
					<string>comment.block.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>commentDocumentation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^\s*\{</string>
					<key>comment</key>
					<string>Documentation comment</string>
					<key>end</key>
					<string>\}</string>
					<key>name</key>
					<string>comment.documentation.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>commentLine</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Single line comment</string>
					<key>match</key>
					<string>;.*$</string>
					<key>name</key>
					<string>comment.line.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#commentBlock</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#commentLine</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#commentDocumentation</string>
				</dict>
			</array>
		</dict>
		<key>constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#bool</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#float</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#integer</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
			</array>
		</dict>
		<key>dotAtom</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Dot</string>
					<key>match</key>
					<string>\.</string>
					<key>name</key>
					<string>keyword.operator.papyrus</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#arrayAtom</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#arrayFuncOrId</string>
				</dict>
			</array>
		</dict>
		<key>else</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(else)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Else statement</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.else.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>elseif</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(elseif)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>ElseIf statement</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.elseif.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>endEvent</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(endevent)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>EndEvent statement</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.endevent.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>endFunction</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(endfunction)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>EndFunction statement</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.endfunction.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>endIf</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(endif)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>EndIf statement</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.endif.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>endOfLine</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#commentBlock</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#commentLine</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#whitespace</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#multiline</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unmatched</string>
				</dict>
			</array>
		</dict>
		<key>endProperty</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(endproperty)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>EndProperty statement</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.endproperty.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>endState</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(endstate)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>EndState statement</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.endstate.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>endWhile</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(endwhile)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>EndWhile statement</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.endwhile.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>endgroup</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(endgroup)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>EndGroup statement</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.endgroup.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>endstruct</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(endstruct)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>EndStruct statement</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.endstruct.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>event</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(event)\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.eventstart.papyrus</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Event declaration</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.event.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#eventParameters</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#eventFlags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalKeywords</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalSpecialVariables</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalBaseTypes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#functionIdentifier</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>eventFlags</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Event flags</string>
					<key>match</key>
					<string>(?i)(?&lt;=\))\s*(native)\b</string>
					<key>name</key>
					<string>keyword.other.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>eventParameter</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#eventParameterIdentifier</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#typeIdentifier</string>
				</dict>
			</array>
		</dict>
		<key>eventParameterIdentifier</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Event parameter identifier</string>
					<key>match</key>
					<string>(?i)\b([_a-z][0-9_a-z]*)\s*(?=(\,|\)))</string>
					<key>name</key>
					<string>variable.parameter.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>eventParameters</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>comment</key>
					<string>Event parameters</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.eventparameters.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#illegalKeywords</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalSpecialVariables</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#eventParameter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comma</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#multiline</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#whitespace</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#unmatched</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>OR</string>
					<key>match</key>
					<string>\|\|</string>
					<key>name</key>
					<string>keyword.operator.papyrus</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#andExpression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#endOfLine</string>
				</dict>
			</array>
		</dict>
		<key>float</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#unaryMinus</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Float literal</string>
					<key>match</key>
					<string>\b(\d+\.\d+)\b</string>
					<key>name</key>
					<string>constant.numeric.float.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>funcOrId</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Length</string>
					<key>match</key>
					<string>(?i)\b(length)\b</string>
					<key>name</key>
					<string>keyword.other.papyrus</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#functionCall</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#illegalKeywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#illegalBaseTypes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#specialVariables</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#identifier</string>
				</dict>
			</array>
		</dict>
		<key>function</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(?:([_a-z][0-9_a-z]*)(?:\[\])?\s+)?(function)\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.papyrus</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.functionstart.papyrus</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Function declaration</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.function.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#functionParameters</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#functionFlags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalKeywords</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalSpecialVariables</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalBaseTypes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#functionIdentifier</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>functionCall</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)\b([_a-z][0-9_a-z]*)\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Function call</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.functioncall.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#functionCallParameters</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>functionCallParameter</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.papyrus</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Specific parameter</string>
					<key>match</key>
					<string>(?i)\b(?:([_a-z][0-9_a-z]*)\s*(\=))?</string>
					<key>name</key>
					<string>meta.functioncallparameter.papyrus</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>functionCallParameters</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comma</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#functionCallParameter</string>
				</dict>
			</array>
		</dict>
		<key>functionFlags</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Function flags</string>
					<key>match</key>
					<string>(?i)\b(betaonly|debugonly|global|native)\b</string>
					<key>name</key>
					<string>keyword.other.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>functionIdentifier</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Function/event identifier</string>
					<key>match</key>
					<string>(?i)\b([_a-z][0-9_a-z]*)(?=\()</string>
					<key>name</key>
					<string>entity.name.function.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>functionParameter</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#functionParameterIdentifier</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#typeIdentifier</string>
				</dict>
			</array>
		</dict>
		<key>functionParameterIdentifier</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Event parameter identifier</string>
					<key>match</key>
					<string>(?i)\b([_a-z][0-9_a-z]*)\s*(?=(\,|\)|\=))</string>
					<key>name</key>
					<string>variable.parameter.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>functionParameters</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>comment</key>
					<string>Function parameters</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.functionparameters.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>Assignment operator</string>
							<key>match</key>
							<string>(\=)</string>
							<key>name</key>
							<string>keyword.operator.assignment.papyrus</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#constants</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalKeywords</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalSpecialVariables</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#functionParameter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comma</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#multiline</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#whitespace</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#unmatched</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>group</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(group)\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Gourp declaration</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.group.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#illegalKeywords</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalSpecialVariables</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalBaseTypes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#identifier</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>identifier</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Identifier</string>
					<key>match</key>
					<string>(?i)\b([_a-z][0-9_a-z]*)\b</string>
					<key>name</key>
					<string>variable.other.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>if</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(if)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>If statement</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.if.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>illegalBaseTypes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Type</string>
					<key>match</key>
					<string>(?i)\b(bool|float|int|string|var)\b</string>
					<key>name</key>
					<string>meta.invalid.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>illegalKeywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Keywords</string>
					<key>match</key>
					<string>(?i)\b(as|auto|autoreadonly|betaonly|collapsed|collapsedonref|collapsedonbase|const|debugonly|default|else|elseif|endevent|endfunction|endgroup|endif|endproperty|endstate|endwhile|event|extends|false|function|global|group|if|import|length|mandatory|native|new|none|property|return|scriptname|state|true|while)\b</string>
					<key>name</key>
					<string>meta.invalid.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>illegalSpecialVariables</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Special variables</string>
					<key>match</key>
					<string>(?i)\b(parent|self)\b</string>
					<key>name</key>
					<string>meta.invalid.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>import</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(import)\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Import statement</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.import.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#illegalKeywords</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalSpecialVariables</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalBaseTypes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#typeIdentifier</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>integer</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#unaryMinus</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Integer literal</string>
					<key>match</key>
					<string>(?i)\b(0x[0-9a-f]+|\d+)\b</string>
					<key>name</key>
					<string>constant.numeric.integer.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Keywords</string>
					<key>match</key>
					<string>(?i)\b(as|auto|autoreadonly|betaonly|collapsed|collapsedonref|collapsedonbase|const|debugonly|default|else|elseif|endevent|endfunction|endgroup|endif|endproperty|endstate|endwhile|event|extends|false|function|global|group|if|import|length|mandatory|native|new|none|property|return|scriptname|state|true|while)\b</string>
					<key>name</key>
					<string>keyword.other.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>multExpression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Multiplication, division, or modulus</string>
					<key>match</key>
					<string>(\*|/|\%)</string>
					<key>name</key>
					<string>keyword.operator.papyrus</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unaryExpression</string>
				</dict>
			</array>
		</dict>
		<key>multiline</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\\</string>
					<key>comment</key>
					<string>Multiline</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.multiline.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#commentBlock</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#commentLine</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#whitespace</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#unmatched</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>parameterIdentifier</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Parameter identifier</string>
					<key>match</key>
					<string>(?i)\b([_a-z][0-9_a-z]*)\b</string>
					<key>name</key>
					<string>variable.parameter.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>property</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*([_a-z][0-9_a-z]*)(?:\[\])?\s+(property)\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.papyrus</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Property declaration</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.property.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>Assignment operator</string>
							<key>match</key>
							<string>(\=)</string>
							<key>name</key>
							<string>keyword.operator.assignment.papyrus</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#constants</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#propertyFlags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalKeywords</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalSpecialVariables</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalBaseTypes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#identifier</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>propertyFlags</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Property flags</string>
					<key>match</key>
					<string>(?i)\b(auto|autoreadonly|conditional|const|hidden|mandatory)\b</string>
					<key>name</key>
					<string>keyword.other.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>return</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(return)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Return statements</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.return.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>scriptHeader</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(scriptname)\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Scriptheader</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.scriptheader.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>Script parent declaration</string>
							<key>match</key>
							<string>(?i)\b(extends)\b</string>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>Script flags</string>
							<key>match</key>
							<string>(?i)\b(conditional|const|default|hidden|native)\b</string>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalKeywords</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalSpecialVariables</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalBaseTypes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#typeIdentifier</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>specialVariables</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Special variables</string>
					<key>match</key>
					<string>(?i)\b(parent|self)\b</string>
					<key>name</key>
					<string>keyword.other.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>state</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(?:(auto)\s+)?(state)\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>State declaration</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.state.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#illegalKeywords</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalSpecialVariables</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalBaseTypes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#identifier</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\"</string>
					<key>comment</key>
					<string>String literal</string>
					<key>end</key>
					<string>\"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>Escape sequences</string>
							<key>match</key>
							<string>(\\.)</string>
							<key>name</key>
							<string>constant.character.escape.papyrus</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>struct</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(struct)\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Struct declaration</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.struct.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#illegalKeywords</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalSpecialVariables</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegalBaseTypes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#identifier</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>typeIdentifier</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Type identifier</string>
					<key>match</key>
					<string>(?i)\b([_a-z][0-9_a-z]*)\b</string>
					<key>name</key>
					<string>storage.type.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>unaryExpression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Unary minus or NOT</string>
					<key>match</key>
					<string>(\-|\!)</string>
					<key>name</key>
					<string>keyword.operator.papyrus</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#castAtom</string>
				</dict>
			</array>
		</dict>
		<key>unaryMinus</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Unary minus</string>
					<key>match</key>
					<string>\-(?=\d)</string>
					<key>name</key>
					<string>keyword.operator.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>unmatched</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Unmatched</string>
					<key>match</key>
					<string>([^\n\r])</string>
					<key>name</key>
					<string>meta.invalid.papyrus</string>
				</dict>
			</array>
		</dict>
		<key>variable</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*([_a-z][0-9_a-z]*)(?:\[\])?\s+([_a-z][0-9_a-z]*)(?:\s*(\=)\s*)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.papyrus</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.papyrus</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Variable declaration with a default value</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.variable.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constants</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)(?:\b(conditional|const)\b)</string>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*([_a-z][0-9_a-z]*)(?:\[\])?\s+([_a-z][0-9_a-z]*)(?:\s+(conditional|const)\b)?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.papyrus</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.papyrus</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Scriptwide variable declaration without a default value</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.variable.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>while</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(while)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.papyrus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>While statement</string>
					<key>end</key>
					<string>([\n\r])</string>
					<key>name</key>
					<string>meta.while.papyrus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#endOfLine</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>whitespace</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Whitespace</string>
					<key>match</key>
					<string>([ \t])</string>
					<key>name</key>
					<string>meta.whitespace.papyrus</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.papyrus.fallout4</string>
	<key>uuid</key>
	<string>c3a48958-a5a3-4e6e-9434-ec86a0656c29</string>
</dict>
</plist>
